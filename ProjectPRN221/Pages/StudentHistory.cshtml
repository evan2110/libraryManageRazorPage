@page
@using ManageBookLibrary.BusinessObject;
@using PagedList;
@model ProjectPRN221.Pages.StudentHistoryModel
@{
    var booksBorrow = ViewData["booksBorrow"] as IPagedList<BookBorrowDTO>;
    var totalBooksBorrow = ViewData["totalBooksBorrow"];
    HttpContext context = Request.HttpContext;
}
@if (context.Session.GetString("UserRole") == "Student" || context.Session.GetString("UserRole") == "Manager")
{
<div class="isolate bg-white px-6 py-24 sm:py-32 lg:px-8">

    <div class="flex" style="display: flex;
                        justify-content: space-between; margin-bottom:15px;">
        <h2 class="text-2xl font-bold leading-7 text-gray-900 sm:truncate sm:text-3xl sm:tracking-tight">Book borrow history</h2>
        <span class="ml-3 hidden sm:block">
            <button type="button" class="inline-flex items-center rounded-md bg-white px-3 py-2 text-sm font-semibold text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 hover:bg-gray-50">
                <svg class="-ml-0.5 mr-1.5 h-5 w-5 text-gray-400" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                    <path d="M12.232 4.232a2.5 2.5 0 013.536 3.536l-1.225 1.224a.75.75 0 001.061 1.06l1.224-1.224a4 4 0 00-5.656-5.656l-3 3a4 4 0 00.225 5.865.75.75 0 00.977-1.138 2.5 2.5 0 01-.142-3.667l3-3z" />
                    <path d="M11.603 7.963a.75.75 0 00-.977 1.138 2.5 2.5 0 01.142 3.667l-3 3a2.5 2.5 0 01-3.536-3.536l1.225-1.224a.75.75 0 00-1.061-1.06l-1.224 1.224a4 4 0 105.656 5.656l3-3a4 4 0 00-.225-5.865z" />
                </svg>
                History
            </button>
        </span>
    </div>
    <table class="table border-collapse">
        <thead>
            <tr>
                <th class="p-2">ID</th>
                <th class="p-2">FullName</th>
                <th class="p-2">Email</th>
                <th class="p-2">Phone</th>
                <th class="p-2">Address</th>
                <th class="p-2">Gender</th>
                <th class="p-2">Date Borrowed</th>
                <th class="p-2">Due Date</th>
                <th class="p-2">DateReturn</th>
                <th class="p-2">Receive By</th>
                <th class="p-2">Title</th>
                <th class="p-2">Author</th>
                <th class="p-2">Shelf</th>
                @if (context.Session.GetString("UserRole") == "Manager")
                {
                <th class="p-2">Done</th>
                }else{
                <th class="p-2"></th>
                }

            </tr>
        </thead>
        <tbody>
            @foreach (var item in booksBorrow)
            {
                <tr>
                    <td class="p-2">@Html.DisplayFor(modelItem => item.BookBorrowId)</td>
                    <td class="p-2">@Html.DisplayFor(modelItem => item.FirstName) @Html.DisplayFor(modelItem => item.LastName)</td>
                    <td class="p-2">@Html.DisplayFor(modelItem => item.Email)</td>
                    <td class="p-2">@Html.DisplayFor(modelItem => item.Phone)</td>
                    <td class="p-2">@Html.DisplayFor(modelItem => item.Address)</td>
                    <td class="p-2">@Html.DisplayFor(modelItem => item.Gender)</td>
                    <td class="p-2">@Html.DisplayFor(modelItem => item.DateBorrowed)</td>
                    <td class="p-2">@Html.DisplayFor(modelItem => item.DueDate)</td>
                    <td class="p-2">@Html.DisplayFor(modelItem => item.DateReturn)</td>
                    <td class="p-2">@Html.DisplayFor(modelItem => item.ReceivedBy)</td>
                    <td class="p-2">@Html.DisplayFor(modelItem => item.Title)</td>
                    <td class="p-2">@Html.DisplayFor(modelItem => item.Author)</td>
                    <td class="p-2">@Html.DisplayFor(modelItem => item.ShelfLocation)</td>
                    @if (context.Session.GetString("UserRole") == "Manager")
                    {
                        <td>
                            <div class="flex h-6 items-center">
                                @if (item.DateReturn != null)
                                {
                                    <input checked id="@(item.BookBorrowId)" name="done" type="checkbox" class="h-4 w-4 rounded border-gray-300 text-indigo-600 focus:ring-indigo-600" onchange="handleCheckboxChange(this)" style="display: none;">
                                    <i class="fa-solid fa-check fa-shake fa-2xl" style="color: #06ef58;"></i>
                                }
                                else
                                {
                                    <input id="@(item.BookBorrowId)" name="done" type="checkbox" class="h-4 w-4 rounded border-gray-300 text-indigo-600 focus:ring-indigo-600" onchange="handleCheckboxChange(this)" @(ViewData["id"] != null && ViewData["id"].ToString() == item.BookBorrowId.ToString() ? "style=\"display: none;\"" : "")>
                                    @if (ViewData["id"] != null && ViewData["id"].ToString() == item.BookBorrowId.ToString())
                                    {
                                        <input checked id="@(item.BookBorrowId)" name="done" type="checkbox" class="h-4 w-4 rounded border-gray-300 text-indigo-600 focus:ring-indigo-600" onchange="handleCheckboxChange(this)" style="display: none;">
                                    }
                                }
                                
                            </div>
                        </td>
                    }
                    else
                    {
                        <td>
                            <div class="flex h-6 items-center">
                                @if (item.DateReturn != null)
                                {
                                    <i class="fa-solid fa-check fa-shake fa-2xl" style="color: #06ef58;"></i>
                                }else{
                                    <i class="ml-3 fa-solid fa-exclamation fa-beat fa-2xl" style="color: #ff1900;"></i>
                                }

                            </div>
                        </td>
                    }
                </tr>
            }
        </tbody>
    </table>
</div>

<div class="flex items-center justify-between border-t border-gray-200 bg-white px-4 py-3 sm:px-6">
    <div class="flex flex-1 justify-between sm:hidden">
        <a href="@Url.Page("StudentHistory",  $"{@booksBorrow.PageNumber - 1}", new { page = @booksBorrow.PageNumber - 1 })" class="relative inline-flex items-center rounded-md border border-gray-300 bg-white px-4 py-2 text-sm font-medium text-gray-700 hover:bg-gray-50">Previous</a>

        <a href="@Url.Page("StudentHistory", $"{@booksBorrow.PageNumber + 1}", new { page = @booksBorrow.PageNumber + 1 })" class="relative inline-flex items-center rounded-md border border-gray-300 bg-white px-4 py-2 text-sm font-medium text-gray-700 hover:bg-gray-50">Next</a>

    </div>
    <div class="hidden sm:flex sm:flex-1 sm:items-center sm:justify-between">
        <div>
            <p class="text-sm text-gray-700">
                Showing
                <span class="font-medium">@booksBorrow.PageNumber</span>
                /
                <span class="font-medium">@totalBooksBorrow</span>

            </p>
        </div>
        <div>
            <nav class="isolate inline-flex -space-x-px rounded-md shadow-sm" aria-label="Pagination">
                @if (@booksBorrow.PageNumber == 1)
                {
                    <span class="relative inline-flex items-center rounded-l-md px-2 py-2 text-gray-400 ring-1 ring-inset ring-gray-300 focus:z-20 focus:outline-offset-0">
                        <span class="sr-only">Previous</span>
                        <svg class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                            <path fill-rule="evenodd" d="M12.79 5.23a.75.75 0 01-.02 1.06L8.832 10l3.938 3.71a.75.75 0 11-1.04 1.08l-4.5-4.25a.75.75 0 010-1.08l4.5-4.25a.75.75 0 011.06.02z" clip-rule="evenodd" />
                        </svg>
                    </span>

                }
                else
                {
                    <a href="@Url.Page("StudentHistory",  $"{@booksBorrow.PageNumber - 1}", new { page = @booksBorrow.PageNumber - 1 })" class="relative inline-flex items-center rounded-l-md px-2 py-2 text-gray-400 ring-1 ring-inset ring-gray-300 hover:bg-gray-50 focus:z-20 focus:outline-offset-0">
                        <span class="sr-only">Previous</span>
                        <svg class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                            <path fill-rule="evenodd" d="M12.79 5.23a.75.75 0 01-.02 1.06L8.832 10l3.938 3.71a.75.75 0 11-1.04 1.08l-4.5-4.25a.75.75 0 010-1.08l4.5-4.25a.75.75 0 011.06.02z" clip-rule="evenodd" />
                        </svg>
                    </a>
                }

                @for (int i = 1; i <= @booksBorrow.PageCount; i++)
                {
                    <a href="@Url.Page("StudentHistory", $"{i}", new { page = @i })" class="relative inline-flex items-center px-4 py-2 text-sm font-semibold text-gray-900 ring-1 ring-inset ring-gray-300 hover:bg-gray-50 focus:z-20 focus:outline-offset-0">@i</a>
                }

                @if (@booksBorrow.PageNumber == @booksBorrow.PageCount)
                {
                    <span class="relative inline-flex items-center rounded-l-md px-2 py-2 text-gray-400 ring-1 ring-inset ring-gray-300 focus:z-20 focus:outline-offset-0">
                        <span class="sr-only">Next</span>
                        <svg class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                            <path fill-rule="evenodd" d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z" clip-rule="evenodd" />
                        </svg>
                    </span>
                }
                else
                {
                    <a href="@Url.Page("StudentHistory",  $"{@booksBorrow.PageNumber + 1}", new { page = @booksBorrow.PageNumber + 1 })" class="relative inline-flex items-center rounded-l-md px-2 py-2 text-gray-400 ring-1 ring-inset ring-gray-300 hover:bg-gray-50 focus:z-20 focus:outline-offset-0">
                        <span class="sr-only">Next</span>
                        <svg class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                            <path fill-rule="evenodd" d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z" clip-rule="evenodd" />
                        </svg>
                    </a>
                }
            </nav>
        </div>
    </div>
</div>

<script>
    function handleCheckboxChange(checkbox) {
        if (checkbox.checked) {
            
            var id = checkbox.id;
            window.location.href = "/StudentHistory?id=" + id;
        } else {
            
        }
    }
</script>
<script src="https://kit.fontawesome.com/dcb7ffb312.js" crossorigin="anonymous"></script>
}
