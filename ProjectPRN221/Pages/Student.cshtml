@page
@using ManageBookLibrary.BusinessObject;
@using PagedList.Mvc;
@using PagedList;
@model ProjectPRN221.Pages.StudentModel

@{
    var Books = ViewData["books"] as IPagedList<Book>;
    var totalBooks = ViewData["totalBooks"];
    HttpContext context = Request.HttpContext;
}
@if (context.Session.GetString("UserRole") == "Student" || context.Session.GetString("UserRole") == "Manager")
{
<div id="model" class="relative z-10" aria-labelledby="modal-title" role="dialog" aria-modal="true" style="display:none;">
    
    <div class="fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity"></div>

    <div class="fixed inset-0 z-10 overflow-y-auto">
        <div class="flex min-h-full items-end justify-center p-4 text-center sm:items-center sm:p-0">
            
            <div class="relative transform overflow-hidden rounded-lg bg-white text-left shadow-xl transition-all sm:my-8 sm:w-full sm:max-w-lg">
                <div class="bg-white px-4 pb-4 pt-5 sm:p-6 sm:pb-4">
                    <div class="sm:flex sm:items-start">
                        <div class="mx-auto flex h-12 w-12 flex-shrink-0 items-center justify-center rounded-full bg-red-100 sm:mx-0 sm:h-10 sm:w-10">
                            <svg class="h-6 w-6 text-red-600" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" aria-hidden="true">
                                <path stroke-linecap="round" stroke-linejoin="round" d="M12 9v3.75m-9.303 3.376c-.866 1.5.217 3.374 1.948 3.374h14.71c1.73 0 2.813-1.874 1.948-3.374L13.949 3.378c-.866-1.5-3.032-1.5-3.898 0L2.697 16.126zM12 15.75h.007v.008H12v-.008z" />
                            </svg>
                        </div>
                        <div class="mt-3 text-center sm:ml-4 sm:mt-0 sm:text-left">
                            <h3 class="text-base font-semibold leading-6 text-gray-900" id="modal-title">Deactivate book</h3>
                            <div class="mt-2">
                                <p class="text-sm text-gray-500">Are you sure you want to deactivate your book? All of your data will be permanently removed. This action cannot be undone.</p>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="bg-gray-50 px-4 py-3 sm:flex sm:flex-row-reverse sm:px-6">
                    <button onclick="redirectToDelete()" type="button" class="inline-flex w-full justify-center rounded-md bg-red-600 px-3 py-2 text-sm font-semibold text-white shadow-sm hover:bg-red-500 sm:ml-3 sm:w-auto">Deactivate</button>
                    <button onclick="closeModal()" type="button" class="mt-3 inline-flex w-full justify-center rounded-md bg-white px-3 py-2 text-sm font-semibold text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 hover:bg-gray-50 sm:mt-0 sm:w-auto">Cancel</button>
                </div>
            </div>
        </div>
    </div>
</div>

@*End Model*@
<div class="isolate bg-white px-6 py-24 sm:py-32 lg:px-8">
    <div class="flex" style="display: flex;
                        justify-content: space-between; 
                         margin-bottom:15px;">
        @if (context.Session.GetString("UserRole") == "Student")
        {
            <h2 class="text-2xl font-bold leading-7 text-gray-900 sm:truncate sm:text-3xl sm:tracking-tight">Book Borrow System</h2>
        }
        else
        {
            <h2 class="text-2xl font-bold leading-7 text-gray-900 sm:truncate sm:text-3xl sm:tracking-tight">Book System</h2>
        }
        <span class="ml-3 hidden sm:block">
                <button id="button" style=" border: 1px solid #ACD3FF;" onclick="redirectToStudentHistory()" type="button" class="inline-flex items-center rounded-md px-3 py-2 text-sm font-semibold text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300">
                <svg class="-ml-0.5 mr-1.5 h-5 w-5 text-gray-400" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                    <path d="M12.232 4.232a2.5 2.5 0 013.536 3.536l-1.225 1.224a.75.75 0 001.061 1.06l1.224-1.224a4 4 0 00-5.656-5.656l-3 3a4 4 0 00.225 5.865.75.75 0 00.977-1.138 2.5 2.5 0 01-.142-3.667l3-3z" />
                    <path d="M11.603 7.963a.75.75 0 00-.977 1.138 2.5 2.5 0 01.142 3.667l-3 3a2.5 2.5 0 01-3.536-3.536l1.225-1.224a.75.75 0 00-1.061-1.06l-1.224 1.224a4 4 0 105.656 5.656l3-3a4 4 0 00-.225-5.865z" />
                </svg>
                History
            </button>
        </span>
    </div>
    
    <div class="search-container" style="display:flex; justify-content:space-between;">
        <div>
            <input style=" border: 1px solid #ACD3FF;" value="@ViewData["search"]" id="search-input" type="text" class="search-input" placeholder="Searching...">
            <button onclick="searching(this)" class="search-button"><i class="fa-solid fa-magnifying-glass fa-beat-fade fa-lg" style="color: #ffffff;"></i></button>
        </div>
        @if (context.Session.GetString("UserRole") == "Manager")
        {
            <div style="display:flex;">
                <span class="hidden sm:block button-select-date ">
                    <button id="button" style=" border: 1px solid #ACD3FF;margin-right:10px;" type="button" class="inline-flex items-center rounded-md px-3 py-2 text-sm font-semibold text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300">
                            <i class="fa-solid fa-filter" style="color: #4838ca; margin:3px;"></i>
                        Filter
                    </button>
                    <div id="selectDate" style="display:none; margin-right:5px;z-index: 10;position:absolute; background-color:azure;">
                        <input value="@(ViewData["fromDate"]!=null?ViewData["fromDate"]:null)" style="border: 1px solid #ACD3FF;" type="text" name="fromDate" id="fromDate" autocomplete="DueDate" class="mb-10 block w-full rounded-md py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 datetimepicker" placeholder="Select from date" onchange="getData()">
                        <input value="@(ViewData["toDate"]!=null?ViewData["toDate"]:null)" style="border: 1px solid #ACD3FF;" type="text" name="toDate" id="toDate" autocomplete="DueDate" class="mb-10 block w-full rounded-md py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 datetimepicker" placeholder="Select to date" onchange="getData()">
                    </div>
                </span>
                <span class="hidden sm:block">
                    <button id="button" style=" border: 1px solid #ACD3FF;" onclick="redirectToStudent(null, 'Create')" type="button" class="inline-flex items-center rounded-md px-3 py-2 text-sm font-semibold text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300">
                            <i class="fa-solid fa-circle-plus" style="color: #4838ca; margin:3px;"></i>
                        Create
                    </button>
                </span>

                <span class="ml-3 hidden sm:block">
                    <button id="button" style=" border: 1px solid #ACD3FF;" onclick="redirectExcel('export')" type="button" class="inline-flex items-center rounded-md px-3 py-2 text-sm font-semibold text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300">
                        <i class="fa-solid fa-file-export" style="color: #4838ca; margin:3px;"></i>
                        Export
                    </button>
                </span>

                <form method="post" enctype="multipart/form-data">
                    <input asp-for="@Model.FileUpload" id="img" style="display:none;" />
                    <label for="img" class="upload-label ml-3">Upload file</label>

                    <button id="button" style=" border: 1px solid #ACD3FF;" onclick="importFile()" class="ml-3 inline-flex items-center rounded-md px-3 py-2 text-sm font-semibold text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300">
                        <i class="fa-solid fa-file-arrow-down" style="color: #4838ca; margin:3px;"></i>
                        Import
                    </button>
                </form>

            </div>
        }
        
    </div>
    <div>
        <table class="table border-collapse mt-3">
                <thead style="background-color:#DBECFF;">
                    <tr style="border: 1px solid #ACD3FF;">
                        <th style="border: 1px solid #ACD3FF;" class="p-2">Title</th>
                        <th style="border: 1px solid #ACD3FF;" class="p-2">Author</th>
                        <th style="border: 1px solid #ACD3FF;" class="p-2">PublicationDate</th>
                        <th style="border: 1px solid #ACD3FF;" class="p-2">TotalCopies</th>
                        <th style="border: 1px solid #ACD3FF;" class="p-2">AvailableCopies</th>
                        <th style="border: 1px solid #ACD3FF;" class="p-2">ShelfLocation</th>
                        <th style="border: 1px solid #ACD3FF;" class="p-2"></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Books)
                {
                    <tr>
                        <td style="border: 1px solid #ACD3FF;" class="p-2">@Html.DisplayFor(modelItem => item.Title)</td>
                        <td style="border: 1px solid #ACD3FF;" class="p-2">@Html.DisplayFor(modelItem => item.Author)</td>
                        <td style="border: 1px solid #ACD3FF;" class="p-2">@item.PublicationDate.ToString("dd/MM/yyyy")</td>
                        <td style="border: 1px solid #ACD3FF;" class="p-2">@Html.DisplayFor(modelItem => item.TotalCopies)</td>
                        <td style="border: 1px solid #ACD3FF;" class="p-2">@Html.DisplayFor(modelItem => item.AvailableCopies)</td>
                        <td style="border: 1px solid #ACD3FF;" class="p-2">@Html.DisplayFor(modelItem => item.ShelfLocation)</td>
                        <td style="border: 1px solid #ACD3FF;" class="p-2">
                        @if (context.Session.GetString("UserRole") == "Student")
                        {
                            @if (item.AvailableCopies <= 0)
                            {
                                <button style="width:54px; text-align:center;" type="button" class="text-white inline-flex items-center rounded-md bg-red-500 px-2 py-1 text-xs font-medium ring-1 ring-inset ring-red-500/10 borrow-link" disabled>Clear</button>
                            }
                            else
                            {
                                <button type="button" data-bookid="@item.BookId" onclick="redirectToStudent(this, 'Borrow')" class="inline-flex items-center rounded-md bg-indigo-50 px-2 py-1 text-xs font-medium text-indigo-700 ring-1 ring-inset ring-indigo-700/10 borrow-link">Borrow</button>
                            }
                        }
                        else
                        {
                            <button type="button" data-bookid="@item.BookId" onclick="redirectToStudent(this, 'Edit')" class="inline-flex items-center rounded-md bg-indigo-50 px-2 py-1 text-xs font-medium text-indigo-700 ring-1 ring-inset ring-indigo-700/10 borrow-link">Edit</button>
                            <button type="button" data-bookid="@item.BookId" onclick="redirectToStudent(this, 'Delete')" class="inline-flex items-center rounded-md bg-pink-50 px-2 py-1 text-xs font-medium text-pink-700 ring-1 ring-inset ring-pink-700/10">Delete</button>
                        }

                        </td>

                    </tr>
                }
            </tbody>
        </table>
    </div>

<div class="flex items-center justify-between border-t border-gray-200 bg-white px-4 py-3 sm:px-6">
    <div class="flex flex-1 justify-between sm:hidden">
        <a href="@Url.Page("Student",  $"{@Books.PageNumber - 1}", new { page = @Books.PageNumber - 1 })" class="relative inline-flex items-center rounded-md border border-gray-300 bg-white px-4 py-2 text-sm font-medium text-gray-700 hover:bg-gray-50">Previous</a>

        <a href="@Url.Page("Student", $"{@Books.PageNumber + 1}", new { page = @Books.PageNumber + 1 })" class="relative inline-flex items-center rounded-md border border-gray-300 bg-white px-4 py-2 text-sm font-medium text-gray-700 hover:bg-gray-50">Next</a>

    </div>
    <div class="hidden sm:flex sm:flex-1 sm:items-center sm:justify-between">
        <div>
            <p class="text-sm text-gray-700">
                Showing
                <span class="font-medium">@Books.PageNumber</span>
                /
                <span class="font-medium">@totalBooks</span>
                
            </p>
        </div>
        <div>
            <nav class="isolate inline-flex -space-x-px rounded-md shadow-sm" aria-label="Pagination">
                @if (@Books.PageNumber == 1)
                {
                    <span class="relative inline-flex items-center rounded-l-md px-2 py-2 text-gray-400 ring-1 ring-inset ring-gray-300 focus:z-20 focus:outline-offset-0">
                        <span class="sr-only">Previous</span>
                        <svg class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                            <path fill-rule="evenodd" d="M12.79 5.23a.75.75 0 01-.02 1.06L8.832 10l3.938 3.71a.75.75 0 11-1.04 1.08l-4.5-4.25a.75.75 0 010-1.08l4.5-4.25a.75.75 0 011.06.02z" clip-rule="evenodd" />
                        </svg>
                    </span>
                    
                }
                else
                {
                            <a href="@Url.Page("Student",  $"{@Books.PageNumber - 1}", new { page = @Books.PageNumber - 1, search = ViewData["search"], fromDate = ViewData["fromDate"], toDate = ViewData["toDate"]    })" class="relative inline-flex items-center rounded-l-md px-2 py-2 text-gray-400 ring-1 ring-inset ring-gray-300 hover:bg-gray-50 focus:z-20 focus:outline-offset-0">
                        <span class="sr-only">Previous</span>
                        <svg class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                            <path fill-rule="evenodd" d="M12.79 5.23a.75.75 0 01-.02 1.06L8.832 10l3.938 3.71a.75.75 0 11-1.04 1.08l-4.5-4.25a.75.75 0 010-1.08l4.5-4.25a.75.75 0 011.06.02z" clip-rule="evenodd" />
                        </svg>
                    </a>
                }

                <!-- Current: "z-10 bg-indigo-600 text-white focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600", Default: "text-gray-900 ring-1 ring-inset ring-gray-300 hover:bg-gray-50 focus:outline-offset-0" -->
                @for (int i = 1; i <= @Books.PageCount; i++)
                {
                    <a href="@Url.Page("Student", $"{i}", new { page = @i, search = ViewData["search"], fromDate = ViewData["fromDate"], toDate = ViewData["toDate"]  })" class="relative inline-flex items-center px-4 py-2 text-sm font-semibold text-gray-900 ring-1 ring-inset ring-gray-300 hover:bg-gray-50 focus:z-20 focus:outline-offset-0">@i</a>
                }

                @if (@Books.PageNumber == @Books.PageCount)
                {
                    <span class="relative inline-flex items-center rounded-l-md px-2 py-2 text-gray-400 ring-1 ring-inset ring-gray-300 focus:z-20 focus:outline-offset-0">
                        <span class="sr-only">Next</span>
                        <svg class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                            <path fill-rule="evenodd" d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z" clip-rule="evenodd" />
                        </svg>
                    </span>
                }
                else
                {
                            <a href="@Url.Page("Student",  $"{@Books.PageNumber + 1}", new { page = @Books.PageNumber + 1, search = ViewData["search"], fromDate = ViewData["fromDate"], toDate = ViewData["toDate"]    })" class="relative inline-flex items-center rounded-l-md px-2 py-2 text-gray-400 ring-1 ring-inset ring-gray-300 hover:bg-gray-50 focus:z-20 focus:outline-offset-0">
                        <span class="sr-only">Next</span>
                        <svg class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                            <path fill-rule="evenodd" d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z" clip-rule="evenodd" />
                        </svg>
                    </a>
                }
            </nav>
        </div>
    </div>
</div>
</div>
<script>
    var bookIdDelete;

    function redirectToStudent(button, check) {
        if (check === 'Borrow') {
            var bookId = button.getAttribute("data-bookid");
            window.location.href = '/Student?handler=' + @Books.PageNumber + '&bookId=' + bookId;
        }
        if (check === 'Create'){
            window.location.href = '/Manager';
        }
        if (check === 'Edit') {
            window.location.href = '/Manager?bookId=' + button.getAttribute("data-bookid");
        }
        if(check === 'Delete'){
            bookIdDelete = button.getAttribute("data-bookid");
            var modal = document.getElementById("model");
            modal.style.display = "block";
        }
        
    }

    function searching(button){
        var searchInput = document.getElementById("search-input").value;
        var fromDate = document.getElementById("fromDate").value;
        var toDate = document.getElementById("toDate").value;
        var url = '/Student?search=' + encodeURIComponent(searchInput) + '&fromDate=' + fromDate + '&toDate=' + toDate;
        window.location.href = url;
    }

    function redirectToStudentHistory() {
        window.location.href = "/StudentHistory";
    }

    function closeModal(){
        var modal = document.getElementById("model");
        modal.style.display = "none";
    }

    function redirectToDelete(){
        window.location.href = '/Student?bookIdDelete=' + bookIdDelete;
    }
    function redirectExcel(mode){
        if(mode === 'export'){
            window.location.href = "/Excel?mode=export";
        }else{
            window.location.href = "/Excel?mode=import";
        }
    }

    function importFile() {
        var fileInput = document.getElementById('img');
        if (!fileInput.files || !fileInput.files[0]) {
            var link = document.createElement('a');
            link.href = '/Template.xlsx';
            link.download = 'Template.xlsx';
            link.target = '_blank';
            link.click();
        }
    }

</script>
<style>
        #button:hover {
            background-color: #ACD3FF;
        }

        .button-select-date:hover + #selectDate {
            display: block;
        }
</style>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">
    <script src="https://cdn.jsdelivr.net/npm/flatpickr">   </script>
    <script>
        flatpickr('.datetimepicker', {
            enableTime: true,
            dateFormat: "Y-m-d H:i",
            // Các tùy chọn khác tùy theo nhu cầu của bạn
        });

        function getData() {
            var fromDate = document.getElementById("fromDate").value;
            var toDate = document.getElementById("toDate").value;

            // Thực hiện truy vấn GET với các giá trị đã chọn
            window.location.href = '/Student?handler=' + @Books.PageNumber + '&fromDate=' + fromDate + '&toDate=' + toDate;
        }
    </script>
}






