@page
@using ManageBookLibrary.BusinessObject;
@using PagedList.Mvc;
@using PagedList;
@model ProjectPRN221.Pages.StudentModel

@{
    var Books = ViewData["books"] as IPagedList<Book>;
    var totalBooks = ViewData["totalBooks"];
    HttpContext context = Request.HttpContext;
}

<div class="isolate bg-white px-6 py-24 sm:py-32 lg:px-8">

    <div class="flex" style="display: flex;
                        justify-content: space-between; 
                         margin-bottom:15px;">
        @if (context.Session.GetString("UserRole") == "Student")
        {
            <h2 class="text-2xl font-bold leading-7 text-gray-900 sm:truncate sm:text-3xl sm:tracking-tight">Book borrow system</h2>
        }
        else
        {
            <h2 class="text-2xl font-bold leading-7 text-gray-900 sm:truncate sm:text-3xl sm:tracking-tight">Book system</h2>
        }
        <span class="ml-3 hidden sm:block">
            <button onclick="redirectToStudentHistory()" type="button" class="inline-flex items-center rounded-md bg-white px-3 py-2 text-sm font-semibold text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 hover:bg-gray-50">
                <svg class="-ml-0.5 mr-1.5 h-5 w-5 text-gray-400" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                    <path d="M12.232 4.232a2.5 2.5 0 013.536 3.536l-1.225 1.224a.75.75 0 001.061 1.06l1.224-1.224a4 4 0 00-5.656-5.656l-3 3a4 4 0 00.225 5.865.75.75 0 00.977-1.138 2.5 2.5 0 01-.142-3.667l3-3z" />
                    <path d="M11.603 7.963a.75.75 0 00-.977 1.138 2.5 2.5 0 01.142 3.667l-3 3a2.5 2.5 0 01-3.536-3.536l1.225-1.224a.75.75 0 00-1.061-1.06l-1.224 1.224a4 4 0 105.656 5.656l3-3a4 4 0 00-.225-5.865z" />
                </svg>
                History
            </button>
        </span>
    </div>
    
    <div class="search-container" style="display:flex; justify-content:space-between;">
        <div>
            <input value="@ViewData["search"]" id="search-input" type="text" class="search-input" placeholder="Searching...">
            <button onclick="searching(this)" class="search-button"><i class="fa-solid fa-magnifying-glass fa-beat-fade fa-lg" style="color: #ffffff;"></i></button>
        </div>
        @if (context.Session.GetString("UserRole") == "Manager")
        {
            <div style="display:flex;">
                <span class="hidden sm:block">
                    <button type="button" class="inline-flex items-center rounded-md bg-white px-3 py-2 text-sm font-semibold text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 hover:bg-gray-50">
                        <i  class="fa-solid fa-circle-plus" style="color: #4838ca; margin:3px;"></i>
                        Create
                    </button>
                </span>

                <span class="ml-3 hidden sm:block">
                    <button type="button" class="inline-flex items-center rounded-md bg-white px-3 py-2 text-sm font-semibold text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 hover:bg-gray-50">
                        <i class="fa-solid fa-file-export" style="color: #4838ca; margin:3px;"></i>
                        Export
                    </button>
                </span>

                <span class="ml-3 hidden sm:block">
                    <button type="button" class="inline-flex items-center rounded-md bg-white px-3 py-2 text-sm font-semibold text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 hover:bg-gray-50">
                        <i class="fa-solid fa-file-import" style="color: #4838ca; margin:3px;"></i>
                        Import
                    </button>
                </span>
            </div>
        }
        
    </div>
        <table class="table border-collapse">
            <thead>
                <tr>
                    <th class="p-2">BookId</th>
                    <th class="p-2">Title</th>
                    <th class="p-2">Author</th>
                    <th class="p-2">PublicationDate</th>
                    <th class="p-2">AvailableCopies</th>
                    <th class="p-2">TotalCopies</th>
                    <th class="p-2">ShelfLocation</th>
                    <th class="p-2"></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Books)
                {
                    <tr>
                        <td class="p-2">@Html.DisplayFor(modelItem => item.BookId)</td>
                        <td class="p-2">@Html.DisplayFor(modelItem => item.Title)</td>
                        <td class="p-2">@Html.DisplayFor(modelItem => item.Author)</td>
                        <td class="p-2">@Html.DisplayFor(modelItem => item.PublicationDate)</td>
                        <td class="p-2">@Html.DisplayFor(modelItem => item.AvailableCopies)</td>
                        <td class="p-2">@Html.DisplayFor(modelItem => item.TotalCopies)</td>
                        <td class="p-2">@Html.DisplayFor(modelItem => item.ShelfLocation)</td>
                        <td class="p-2">
                        @if (context.Session.GetString("UserRole") == "Student")
                        {
                            @if (item.AvailableCopies <= 0)
                            {
                                <span class="text-orange-700">Clean</span>
                            }
                            else
                            {
                                <button type="button" data-bookid="@item.BookId" onclick="redirectToStudent(this)" class="inline-flex items-center rounded-md bg-indigo-50 px-2 py-1 text-xs font-medium text-indigo-700 ring-1 ring-inset ring-indigo-700/10 borrow-link">Borrow</button>
                            }
                        }
                        else
                        {
                            <button type="button" data-bookid="@item.BookId" onclick="redirectToStudent(this)" class="inline-flex items-center rounded-md bg-indigo-50 px-2 py-1 text-xs font-medium text-indigo-700 ring-1 ring-inset ring-indigo-700/10 borrow-link">Edit</button>
                            <button type="button" data-bookid="@item.BookId" onclick="redirectToStudent(this)" class="inline-flex items-center rounded-md bg-pink-50 px-2 py-1 text-xs font-medium text-pink-700 ring-1 ring-inset ring-pink-700/10">Delete</button>
                        }

                        </td>

                    </tr>
                }
            </tbody>
        </table>
    </div>

<div class="flex items-center justify-between border-t border-gray-200 bg-white px-4 py-3 sm:px-6">
    <div class="flex flex-1 justify-between sm:hidden">
        <a href="@Url.Page("Student",  $"{@Books.PageNumber - 1}", new { page = @Books.PageNumber - 1 })" class="relative inline-flex items-center rounded-md border border-gray-300 bg-white px-4 py-2 text-sm font-medium text-gray-700 hover:bg-gray-50">Previous</a>

        <a href="@Url.Page("Student", $"{@Books.PageNumber + 1}", new { page = @Books.PageNumber + 1 })" class="relative inline-flex items-center rounded-md border border-gray-300 bg-white px-4 py-2 text-sm font-medium text-gray-700 hover:bg-gray-50">Next</a>

    </div>
    <div class="hidden sm:flex sm:flex-1 sm:items-center sm:justify-between">
        <div>
            <p class="text-sm text-gray-700">
                Showing
                <span class="font-medium">@Books.PageNumber</span>
                /
                <span class="font-medium">@totalBooks</span>
                
            </p>
        </div>
        <div>
            <nav class="isolate inline-flex -space-x-px rounded-md shadow-sm" aria-label="Pagination">
                @if (@Books.PageNumber == 1)
                {
                    <span class="relative inline-flex items-center rounded-l-md px-2 py-2 text-gray-400 ring-1 ring-inset ring-gray-300 focus:z-20 focus:outline-offset-0">
                        <span class="sr-only">Previous</span>
                        <svg class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                            <path fill-rule="evenodd" d="M12.79 5.23a.75.75 0 01-.02 1.06L8.832 10l3.938 3.71a.75.75 0 11-1.04 1.08l-4.5-4.25a.75.75 0 010-1.08l4.5-4.25a.75.75 0 011.06.02z" clip-rule="evenodd" />
                        </svg>
                    </span>
                    
                }
                else
                {
                    <a href="@Url.Page("Student",  $"{@Books.PageNumber - 1}", new { page = @Books.PageNumber - 1, search = ViewData["search"]   })" class="relative inline-flex items-center rounded-l-md px-2 py-2 text-gray-400 ring-1 ring-inset ring-gray-300 hover:bg-gray-50 focus:z-20 focus:outline-offset-0">
                        <span class="sr-only">Previous</span>
                        <svg class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                            <path fill-rule="evenodd" d="M12.79 5.23a.75.75 0 01-.02 1.06L8.832 10l3.938 3.71a.75.75 0 11-1.04 1.08l-4.5-4.25a.75.75 0 010-1.08l4.5-4.25a.75.75 0 011.06.02z" clip-rule="evenodd" />
                        </svg>
                    </a>
                }

                <!-- Current: "z-10 bg-indigo-600 text-white focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600", Default: "text-gray-900 ring-1 ring-inset ring-gray-300 hover:bg-gray-50 focus:outline-offset-0" -->
                @for (int i = 1; i <= @Books.PageCount; i++)
                {
                    <a href="@Url.Page("Student", $"{i}", new { page = @i, search = ViewData["search"]  })" class="relative inline-flex items-center px-4 py-2 text-sm font-semibold text-gray-900 ring-1 ring-inset ring-gray-300 hover:bg-gray-50 focus:z-20 focus:outline-offset-0">@i</a>
                }

                @if (@Books.PageNumber == @Books.PageCount)
                {
                    <span class="relative inline-flex items-center rounded-l-md px-2 py-2 text-gray-400 ring-1 ring-inset ring-gray-300 focus:z-20 focus:outline-offset-0">
                        <span class="sr-only">Next</span>
                        <svg class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                            <path fill-rule="evenodd" d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z" clip-rule="evenodd" />
                        </svg>
                    </span>
                }
                else
                {
                    <a href="@Url.Page("Student",  $"{@Books.PageNumber + 1}", new { page = @Books.PageNumber + 1, search = ViewData["search"]   })" class="relative inline-flex items-center rounded-l-md px-2 py-2 text-gray-400 ring-1 ring-inset ring-gray-300 hover:bg-gray-50 focus:z-20 focus:outline-offset-0">
                        <span class="sr-only">Next</span>
                        <svg class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                            <path fill-rule="evenodd" d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z" clip-rule="evenodd" />
                        </svg>
                    </a>
                }
            </nav>
        </div>
    </div>
</div>

<script>
    function redirectToStudent(button) {
        var bookId = button.getAttribute("data-bookid");
        window.location.href = '/Student?handler=' + @Books.PageNumber + '&bookId=' + bookId;
    }

    function searching(button){
        var searchInput = document.getElementById("search-input").value;
        var url = '/Student?search=' + encodeURIComponent(searchInput);
        window.location.href = url;
    }

    function redirectToStudentHistory() {
        window.location.href = "/StudentHistory";
    }
</script>
<script src="https://kit.fontawesome.com/dcb7ffb312.js" crossorigin="anonymous"></script>






